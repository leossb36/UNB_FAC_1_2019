.data
	A: .word 0
	resp: .word 0

	break_line: .asciiz "\n"
    error: .asciiz "Entrada invalida.\n"

.text

main:
	# AA and BB, AA or BB, AA xor BB, AA sub BB, AA << 3,  BB >> 1
	jal read_value #leitura de entrada de teclado
	sw $v0, A #salva retorno na word AA
	
	lw $t1, A # corregando dados de AA para variavel de argumento
	jal is_greater_than # checar se AA e maior que 32768
	move $s0, $t1 # copia dados para variavel de argumento
    
    jal factory
	#funcao de print das saidas
	loop: # printar fatoração
        jal print_data
    
    #print quebra de linha
    la $a0, break_line
	
	li $v0, 4
	syscall
	
	jr $ra

	#finalizando programa/
	li $v0, 10 # exit
	syscall

factory:

read_value:
	li $v0, 5 #lendo uma valor inteiro de entrada do teclado
	syscall

	jr $ra #retorna valor inteiro

is_greater_than: #if (arg < 32768) continue
	addi $t2, $t2, 1
    slti $t3, $t1, 32768  #(arg < 32768) -> retorna true ou false
    sge $t4, $t1, $t5
    and $t2, $t3, $t4
	beq $t2, $t3, exit_prog_error #se t3 for true retorna, se false error 

	jr $ra #retorna valor checado

print_data:
	
	li $v0, 1 #Chamada de sistema para print de valor
	move $a0, $t0
	syscall


exit_prog_error:
	
	la $a0, error #printa erro

	li $v0, 4
	syscall

	li $v0, 10 # exit
	syscall